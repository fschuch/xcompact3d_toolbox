[build-system]
requires = ["hatchling>=1.27.0", "hatch-vcs>=0.4.0"]
build-backend = "hatchling.build"

[project]
name = "xcompact3d_toolbox"
description = "A set of tools for pre and postprocessing prepared for the high-order Navier-Stokes solver XCompact3d"
readme = "README.md"
requires-python = ">=3.9"
authors = [{ name = "Felipe N. Schuch", email = "me@fschuch.com" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
]
dynamic = ["version"]
dependencies = [
    "dask[complete]>=2024.8",
    "Deprecated>=1.2",
    "ipywidgets>=8.1",
    "loguru>=0.7",
    "netcdf4>=1.7",
    "numba>=0.60",
    "numpy-stl>=3.2",
    "numpy>=2.0",
    "pandas>=2.2",
    "scipy>=1.13",
    "tqdm>=4.67",
    "traitlets>=5.14",
    "xarray>=2024.7",
]

[project.optional-dependencies]
visu = [
    "bokeh>=2.3",
    "datashader>=0.13",
    "holoviews>=1.14",
    "hvplot>=0.7",
    "matplotlib>=3.2",
    "panel>=0.12",
]
tests = [
    "coverage[toml]>=7.5.3",
    "hypothesis>=6.103.1",
    "pre-commit>=3.5.0",
    "pytest-cov>=5.0.0",
    "pytest>=8.2.2",
]
tests-extra = [
    "pytest-randomly==3.16.0",
    "pytest-rerunfailures==15.1",
    "pytest-xdist==3.8.0",
]
docs = [
    "docutils==0.21.2",
    "ipykernel==6.29.5",
    "jupyter-book==1.0.4.post1",
    "nbsphinx==0.9.7",
    "pooch==1.8.2",
    "sphinx-autobuild==2024.10.3",
    "sphinx-github-changelog==1.7.1",
    "sphinx==7.4.7",
]

[project.urls]
Repository = "https://github.com/fschuch/xcompact3d_toolbox"
Changelog = "https://docs.fschuch.com/xcompact3d_toolbox/references/what-is-new.html"
Documentation = "https://docs.fschuch.com/xcompact3d_toolbox"
Issues = "https://github.com/fschuch/xcompact3d_toolbox/issues"

[tool.pytest.ini_options]
filterwarnings = [
    # Internal deprecation warnings
    "ignore:.*Call to deprecated method cumtrapz.*:FutureWarning",
    "ignore:.*Call to deprecated method simps.*:FutureWarning",
]
# addopts = [
#     "--doctest-modules",
#     "--doctest-glob='*.md'",
#     "--doctest-continue-on-failure",
#     "--doctest-report=ndiff",
# ]

[tool.coverage.run]
branch = true
relative_files = true
source = ["src/xcompact3d_toolbox", "tests"]
omit = ["src/xcompact3d_toolbox/_version.py", "**/__init__.py"]

[tool.coverage.report]
show_missing = false
precision = 2
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "def __repr__",
]

[tool.ruff]
extend = "ruff_defaults.toml"
extend-exclude = ["./docs/conf.py"]

[tool.ruff.lint]
extend-ignore = ["A003"]

[tool.ruff.lint.extend-per-file-ignores]
"*.ipynb" = [
    "E402",    # module level import not at top of file
    "E712",    # comparison to True should be 'if cond is True:' or 'if cond:'
    "PLR2004", # Magic value used in comparison
    "T201",    # `print` found
]
"__init__.py" = ["F401"] # imported but unused
"src/xcompact3d_toolbox/parameters.py" = [
    "N815", # variable in function should be lowercase, but they come from x3d
]
"src/xcompact3d_toolbox/sandbox.py" = [
    "E712", # comparison to True should be 'if cond is True:' or 'if cond:'
]
"src/xcompact3d_toolbox/io.py" = [
    "FBT001", # Boolean-typed positional argument in function definition
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
pretty = true
ignore_missing_imports = true
exclude = ["docs/conf.py"]

[tool.codespell]
skip = "docs/conf.py"
check-filenames = true
ignore-words-list = ["ABL"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/xcompact3d_toolbox/_version.py"

[tool.hatch.envs.default]
description = "Base development environment"
features = ["tests"]
installer = "uv"

[tool.hatch.envs.default.scripts]
pre-commit-install = "pre-commit install {args}"
pre-commit-uninstall = "pre-commit uninstall {args}"
check = "pre-commit run {args} --all-files"
type = "check mypy {args}"
lint = "check ruff {args}"
format = "check ruff-format {args}"
test = "pytest --cov --cov-report=term {args}"
test-no-cov = "test --no-cov {args}"
qa = ["check", "test", "echo 'âœ… QA passed'"]

[tool.hatch.envs.test]
description = "Extended test environment"
features = ["tests", "tests-extra"]

[tool.hatch.envs.test.scripts]
extended = "test -n auto --reruns 7 --reruns-delay 1 {args}"

[[tool.hatch.envs.test.matrix]]
python = ["3.9", "3.10", "3.11", "3.12", "3.13"]

[tool.hatch.envs.docs]
description = "Documentation environment"
features = ["docs", "visu"]
template = "docs"
installer = "uv"
install = true
python = "3.13"

[tool.hatch.envs.docs.scripts]
config = "jupyter-book config sphinx docs {args}"
build = ["config", "jupyter-book build docs --path-output build {args}"]
serve = [
    "config",
    "sphinx-autobuild docs build/_build/html --ignore='**/data/*' --watch src/xcompact3d_toolbox --open-browser {args}",
]
clear = "rm -rf build/_build"

[tool.hatch.envs.hatch-static-analysis]
config-path = "ruff_defaults.toml"
